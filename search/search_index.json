{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Chris Hello my name is Chris Romkema, and I am senior software developer specialized in Java. This page contains several topics; like some general information about me, a technical blog, links, etc.","title":"About me"},{"location":"#chris","text":"Hello my name is Chris Romkema, and I am senior software developer specialized in Java. This page contains several topics; like some general information about me, a technical blog, links, etc.","title":"Chris"},{"location":"blogs/ci-cd/ci-cd-pipeline/","text":"CI/CD Pipelines So CI/CD pipelines, is it just a hype, a fancy buzzword people throw around, or is it actually adding value? \"YES\" without a doubt having a good CI/CD pipeline is an added benefit for everyone. But what is a good pipeline and when can you actually call your pipeline a CI/CD pipeline? Let's take a further look. The examples that I have seen which are being called a CI/CD pipeline fall into three categories, and I would qualify them differently, also I would state each one further in the list is a more mature version of the previous one. Deployment pipeline CI/CD(eployment) pipeline CI/CD(elivery) pipeline Info Following is purely my vision about pipelines and CI/CD, if you have a different vision it could be correct or even better than mine. If you want to start a discussion you can contact me, I'm always open for good discussions. Deployment pipeline This is a pipeline which would start on a push to a specific branch (develop or master), and would do a few steps in succession usually compiling, unit tests, creating deployable artifact, and deploy on a (test) machine. Is this a good pipeline? Well it's a start and adds benefit for developers, but is it an actual CI/CD pipeline? In that case I would have to say no. It is a nice basis, but before it can add value for other people it would need something more. CI/CD(eployment) pipeline This is a pipeline which would start on a push to a specific branch or any branch and would do a few addition steps compared to a 'regular' deployment pipeline. All steps could then be compiling, unit tests and other 'local' tests, creating deployable artifact, deploy on a (test) machine, and test if the deployment was successful using an automated test. When you want to deploy on a machine further in the DTAP environment, it usually requires manual steps to be taken or new pipelines to be started manually. Alternatively it could already deploy on an ACCeptance machine so that manual tests can be started. CI/CD(elivery) pipeline This is a pipeline which would start on a push to any branch and has different rules based on the type of branch, it would perform several steps in succession and requires no, or hardly any manual intervention. A complete pipeline would usually do compiling, unit tests and other 'local' tests, creating a deployable artifact, deploy on a test machine, test deployment with automated tests, deploy on an acceptance machine, do automated regression tests, prepares a production deployment which can be manually started when required. Now what? So after reading all that I assume that everyone wants to implement a full CI/CD(delivery) pipeline, however this is not as simple as creating a pipeline in your favourite tool (like Jenkins, Azure DevOps, etc) and you are done (wouldn't it be nice if it was that simple?). My advice would be to identify what an ideal pipeline would look like for your organisation and what is being done in each step. Next up would be to prepare any automated tests, and to scope them to the necessary functionality. (see an upcoming blog about testing). When that is done you start simple and add a small step one by one, don't try to set up a full pipeline from scratch. If you want an example pseudo pipeline check out JenkinsFile .","title":"CI/CD"},{"location":"blogs/ci-cd/ci-cd-pipeline/#cicd-pipelines","text":"So CI/CD pipelines, is it just a hype, a fancy buzzword people throw around, or is it actually adding value? \"YES\" without a doubt having a good CI/CD pipeline is an added benefit for everyone. But what is a good pipeline and when can you actually call your pipeline a CI/CD pipeline? Let's take a further look. The examples that I have seen which are being called a CI/CD pipeline fall into three categories, and I would qualify them differently, also I would state each one further in the list is a more mature version of the previous one. Deployment pipeline CI/CD(eployment) pipeline CI/CD(elivery) pipeline Info Following is purely my vision about pipelines and CI/CD, if you have a different vision it could be correct or even better than mine. If you want to start a discussion you can contact me, I'm always open for good discussions.","title":"CI/CD Pipelines"},{"location":"blogs/ci-cd/ci-cd-pipeline/#deployment-pipeline","text":"This is a pipeline which would start on a push to a specific branch (develop or master), and would do a few steps in succession usually compiling, unit tests, creating deployable artifact, and deploy on a (test) machine. Is this a good pipeline? Well it's a start and adds benefit for developers, but is it an actual CI/CD pipeline? In that case I would have to say no. It is a nice basis, but before it can add value for other people it would need something more.","title":"Deployment pipeline"},{"location":"blogs/ci-cd/ci-cd-pipeline/#cicdeployment-pipeline","text":"This is a pipeline which would start on a push to a specific branch or any branch and would do a few addition steps compared to a 'regular' deployment pipeline. All steps could then be compiling, unit tests and other 'local' tests, creating deployable artifact, deploy on a (test) machine, and test if the deployment was successful using an automated test. When you want to deploy on a machine further in the DTAP environment, it usually requires manual steps to be taken or new pipelines to be started manually. Alternatively it could already deploy on an ACCeptance machine so that manual tests can be started.","title":"CI/CD(eployment) pipeline"},{"location":"blogs/ci-cd/ci-cd-pipeline/#cicdelivery-pipeline","text":"This is a pipeline which would start on a push to any branch and has different rules based on the type of branch, it would perform several steps in succession and requires no, or hardly any manual intervention. A complete pipeline would usually do compiling, unit tests and other 'local' tests, creating a deployable artifact, deploy on a test machine, test deployment with automated tests, deploy on an acceptance machine, do automated regression tests, prepares a production deployment which can be manually started when required.","title":"CI/CD(elivery) pipeline"},{"location":"blogs/ci-cd/ci-cd-pipeline/#now-what","text":"So after reading all that I assume that everyone wants to implement a full CI/CD(delivery) pipeline, however this is not as simple as creating a pipeline in your favourite tool (like Jenkins, Azure DevOps, etc) and you are done (wouldn't it be nice if it was that simple?). My advice would be to identify what an ideal pipeline would look like for your organisation and what is being done in each step. Next up would be to prepare any automated tests, and to scope them to the necessary functionality. (see an upcoming blog about testing). When that is done you start simple and add a small step one by one, don't try to set up a full pipeline from scratch. If you want an example pseudo pipeline check out JenkinsFile .","title":"Now what?"},{"location":"links/development-links/","text":"Development Links This is a page where I add links which I found useful for programming Coding Google's official java style guide: https://google.github.io/styleguide/javaguide.html Tools CyberChef , a site for online encoding/decoding of text: http://icyberchef.com/ A site for online XOR decoding: https://strelitzia.net/wasXORdecoder/wasXORdecoder.html Secure coding The Dead lock empire , a \"game\" to learn about programming deadlocks: https://deadlockempire.github.io/ Secure Code Warrior https://www.securecodewarrior.com/index.html Documentation Mermaid MD https://mermaid-js.github.io/mermaid/#/","title":"Development Links"},{"location":"links/development-links/#development-links","text":"This is a page where I add links which I found useful for programming","title":"Development Links"},{"location":"links/development-links/#coding","text":"Google's official java style guide: https://google.github.io/styleguide/javaguide.html","title":"Coding"},{"location":"links/development-links/#tools","text":"CyberChef , a site for online encoding/decoding of text: http://icyberchef.com/ A site for online XOR decoding: https://strelitzia.net/wasXORdecoder/wasXORdecoder.html","title":"Tools"},{"location":"links/development-links/#secure-coding","text":"The Dead lock empire , a \"game\" to learn about programming deadlocks: https://deadlockempire.github.io/ Secure Code Warrior https://www.securecodewarrior.com/index.html","title":"Secure coding"},{"location":"links/development-links/#documentation","text":"Mermaid MD https://mermaid-js.github.io/mermaid/#/","title":"Documentation"},{"location":"links/way-of-working-links/","text":"Way of working links The Official Scrum Guide: The Scrum Guide ActionableAgile, a tool to show and calculate predictability: ActionableAgile - TWIG","title":"Way of Working Links"},{"location":"links/way-of-working-links/#way-of-working-links","text":"The Official Scrum Guide: The Scrum Guide ActionableAgile, a tool to show and calculate predictability: ActionableAgile - TWIG","title":"Way of working links"},{"location":"me/resume/","text":"Resume Chris Chris Romkema Expertise Java Git Microservices CI/CD Jenkins Agile Scrum DevOps Spring boot Maven Certification Sun Certified Java Programmer 1.4 ING Jan 2018 - Feb 2021 _ Senior Java Engineer I have worked in two clusters (areas) within ING. First in CTACS, which was responsible for the reconciliation between ING and card schemes, I worked in the team for the Belgian scheme BanContact. After that I worked in Consumer Credit Cards where we were responsible for live cycle management of credit cards. Technologies Java 8 Maven 3.5 Git Jenkins Team Foundation Server (TFS) Ansible Tower Prometeus Grafana Spring boot // TODO: Micro Services // TODO: Rabobank Nov 2014 - Dec 2017 _ Java Engineer I have worked at the Online department which was creating and maintaining the mobile app and website of Rabobank. The team I worked in was responsible for communications with customers, like a chat application, mobile notifications, contact page, etc. Technologies Java 8 Maven 3.5 Git Jenkins Spring boot // TODO: Micro services // TODO: Splunk // TODO: Grafana // TODO: Cucumber // TODO: JavaScript // TODO: Belastingdienst Jun 2013 - Oct 2014 _ Java developer Chris... Equens Apr 2013 - May 2013 _ Java developer Chris... Delta N.V. Jul 2012 - Mar 2013 _ Java developer Chris... Stater N.V. Oct 2011 - Jul 2012 _ Uniface engineer Chris... Delta N.V. Aug 2010 - Dec 2011 _ Java developer Chris... Cargonaut IMO Jul 2010 - Aug 2010 _ Java developer Chris... ABN AMRO / Fortis Jun 2010 - Jul 2010 _ SQL developer I worked for ABN AMRO as an SQL developer. ABN and Fortis were merging together, and they needed test scripts to validate that data was correctly migrated/merged. SQL Stater N.V. Oct 2007 - Aug 2009 _ Uniface engineer Chris... Nationale Nederlanden Jun 2007 - Aug 2007 _ XML/XSLT engineer Chris... Knowledge Values (ABN AMRO) Feb 2007 - May 2007 _ Knowledge engineer Chris...","title":"Resume"},{"location":"me/resume/#resume-chris","text":"Chris Romkema","title":"Resume Chris"},{"location":"me/resume/#expertise","text":"Java Git Microservices CI/CD Jenkins Agile Scrum DevOps Spring boot Maven","title":"Expertise"},{"location":"me/resume/#certification","text":"Sun Certified Java Programmer 1.4","title":"Certification"},{"location":"me/resume/#ing","text":"","title":"ING"},{"location":"me/resume/#jan-2018-feb-2021-_-senior-java-engineer","text":"I have worked in two clusters (areas) within ING. First in CTACS, which was responsible for the reconciliation between ING and card schemes, I worked in the team for the Belgian scheme BanContact. After that I worked in Consumer Credit Cards where we were responsible for live cycle management of credit cards.","title":"Jan 2018 - Feb 2021 _ Senior Java Engineer"},{"location":"me/resume/#technologies","text":"Java 8 Maven 3.5 Git Jenkins Team Foundation Server (TFS) Ansible Tower Prometeus Grafana Spring boot // TODO: Micro Services // TODO:","title":"Technologies"},{"location":"me/resume/#rabobank","text":"","title":"Rabobank"},{"location":"me/resume/#nov-2014-dec-2017-_-java-engineer","text":"I have worked at the Online department which was creating and maintaining the mobile app and website of Rabobank. The team I worked in was responsible for communications with customers, like a chat application, mobile notifications, contact page, etc.","title":"Nov 2014 - Dec 2017 _ Java Engineer"},{"location":"me/resume/#technologies_1","text":"Java 8 Maven 3.5 Git Jenkins Spring boot // TODO: Micro services // TODO: Splunk // TODO: Grafana // TODO: Cucumber // TODO: JavaScript // TODO:","title":"Technologies"},{"location":"me/resume/#belastingdienst","text":"","title":"Belastingdienst"},{"location":"me/resume/#jun-2013-oct-2014-_-java-developer","text":"Chris...","title":"Jun 2013 - Oct 2014 _ Java developer"},{"location":"me/resume/#equens","text":"","title":"Equens"},{"location":"me/resume/#apr-2013-may-2013-_-java-developer","text":"Chris...","title":"Apr 2013 - May 2013 _ Java developer"},{"location":"me/resume/#delta-nv","text":"","title":"Delta N.V."},{"location":"me/resume/#jul-2012-mar-2013-_-java-developer","text":"Chris...","title":"Jul 2012 - Mar 2013 _ Java developer"},{"location":"me/resume/#stater-nv","text":"","title":"Stater N.V."},{"location":"me/resume/#oct-2011-jul-2012-_-uniface-engineer","text":"Chris...","title":"Oct 2011 - Jul 2012 _ Uniface engineer"},{"location":"me/resume/#delta-nv_1","text":"","title":"Delta N.V."},{"location":"me/resume/#aug-2010-dec-2011-_-java-developer","text":"Chris...","title":"Aug 2010 - Dec 2011 _ Java developer"},{"location":"me/resume/#cargonaut-imo","text":"","title":"Cargonaut IMO"},{"location":"me/resume/#jul-2010-aug-2010-_-java-developer","text":"Chris...","title":"Jul 2010 - Aug 2010 _ Java developer"},{"location":"me/resume/#abn-amro-fortis","text":"","title":"ABN AMRO / Fortis"},{"location":"me/resume/#jun-2010-jul-2010-_-sql-developer","text":"I worked for ABN AMRO as an SQL developer. ABN and Fortis were merging together, and they needed test scripts to validate that data was correctly migrated/merged. SQL","title":"Jun 2010 - Jul 2010 _ SQL developer"},{"location":"me/resume/#stater-nv_1","text":"","title":"Stater N.V."},{"location":"me/resume/#oct-2007-aug-2009-_-uniface-engineer","text":"Chris...","title":"Oct 2007 - Aug 2009 _ Uniface engineer"},{"location":"me/resume/#nationale-nederlanden","text":"","title":"Nationale Nederlanden"},{"location":"me/resume/#jun-2007-aug-2007-_-xmlxslt-engineer","text":"Chris...","title":"Jun 2007 - Aug 2007 _ XML/XSLT engineer"},{"location":"me/resume/#knowledge-values-abn-amro","text":"","title":"Knowledge Values (ABN AMRO)"},{"location":"me/resume/#feb-2007-may-2007-_-knowledge-engineer","text":"Chris...","title":"Feb 2007 - May 2007 _ Knowledge engineer"}]}